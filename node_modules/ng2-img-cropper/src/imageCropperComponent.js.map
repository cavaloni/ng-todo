{"version":3,"sources":["../../src/imageCropperComponent.ts"],"names":[],"mappings":"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","file":"imageCropperComponent.js","sourceRoot":"","sourcesContent":["import {Component, Input, Renderer, ViewChild, ElementRef, Output, EventEmitter, Type, AfterViewInit, OnChanges, SimpleChanges} from '@angular/core';\nimport {ImageCropper} from './imageCropper';\nimport {CropperSettings} from './cropperSettings';\nimport {Exif} from './exif';\nimport {Bounds} from './model/bounds';\nimport {CropPosition} from './model/cropPosition';\n\n\nexport class ImageCropperComponent implements AfterViewInit, OnChanges {\n\n     cropcanvas:ElementRef;\n\n     public settings:CropperSettings;\n     public image:any;\n     public cropper:ImageCropper;\n     public cropPosition:CropPosition;\n     public cropPositionChange:EventEmitter<CropPosition> = new EventEmitter<CropPosition>();\n\n     public onCrop:EventEmitter<any> = new EventEmitter();\n\n    public croppedWidth:number;\n    public croppedHeight:number;\n    public intervalRef:number;\n    public renderer:Renderer;\n\n    private isCropPositionUpdateNeeded:boolean;\n\n    constructor(renderer:Renderer) {\n        this.renderer = renderer;\n    }\n\n    public ngAfterViewInit():void {\n        let canvas:HTMLCanvasElement = this.cropcanvas.nativeElement;\n\n        if (!this.settings) {\n            this.settings = new CropperSettings();\n        }\n\n        this.renderer.setElementAttribute(canvas, 'class', this.settings.cropperClass);\n\n        if (!this.settings.dynamicSizing) {\n            this.renderer.setElementAttribute(canvas, 'width', this.settings.canvasWidth.toString());\n            this.renderer.setElementAttribute(canvas, 'height', this.settings.canvasHeight.toString());\n        } else {\n            window.addEventListener('resize', () => {\n                this.settings.canvasWidth = canvas.offsetWidth;\n                this.settings.canvasHeight = canvas.offsetHeight;\n                this.cropper.resizeCanvas(canvas.offsetWidth, canvas.offsetHeight, true);\n            });\n        }\n\n        if (!this.cropper) {\n            this.cropper = new ImageCropper(this.settings);\n        }\n\n        this.cropper.prepare(canvas);\n    }\n\n    public ngOnChanges(changes:SimpleChanges):void {\n        if (this.isCropPositionChanged(changes)) {\n            this.cropper.updateCropPosition(this.cropPosition.toBounds());\n            if (this.cropper.isImageSet()) {\n                let bounds = this.cropper.getCropBounds();\n                this.image.image = this.cropper.getCroppedImage().src;\n                this.onCrop.emit(bounds);\n            }\n            this.updateCropBounds();\n        }\n    }\n\n    public onTouchMove(event:TouchEvent):void {\n        this.cropper.onTouchMove(event);\n    }\n\n    public onTouchStart(event:TouchEvent):void {\n        this.cropper.onTouchStart(event);\n    }\n\n    public onTouchEnd(event:TouchEvent):void {\n        this.cropper.onTouchEnd(event);\n        if (this.cropper.isImageSet()) {\n            this.image.image = this.cropper.getCroppedImage().src;\n            this.onCrop.emit(this.cropper.getCropBounds());\n            this.updateCropBounds();\n        }\n    }\n\n    public onMouseDown(event:MouseEvent):void {\n        this.cropper.onMouseDown(event);\n    }\n\n    public onMouseUp(event:MouseEvent):void {\n        if (this.cropper.isImageSet()) {\n            this.cropper.onMouseUp(event);\n            this.image.image = this.cropper.getCroppedImage().src;\n            this.onCrop.emit(this.cropper.getCropBounds());\n            this.updateCropBounds();\n        }\n    }\n\n    public onMouseMove(event:MouseEvent):void {\n        this.cropper.onMouseMove(event);\n    }\n\n    public fileChangeListener($event:any) {\n        if($event.target.files.length === 0) return;\n\n        let file:File = $event.target.files[0];\n        if (this.settings.allowedFilesRegex.test(file.name)) {\n            let image:any = new Image();\n            let fileReader:FileReader = new FileReader();\n            let that = this;\n\n            fileReader.addEventListener('loadend', function (loadEvent:any) {\n                image.src = loadEvent.target.result;\n                that.setImage(image);\n            });\n\n            fileReader.readAsDataURL(file);\n        }\n    }\n\n    public reset():void {\n        this.cropper.reset();\n        this.renderer.setElementAttribute(this.cropcanvas.nativeElement, 'class', this.settings.cropperClass);\n        this.image.image = this.cropper.getCroppedImage().src;\n    }\n\n    public setImage(image:HTMLImageElement, newBounds:any = null) {\n        let self = this;\n        this.renderer.setElementAttribute(this.cropcanvas.nativeElement, 'class', `${this.settings.cropperClass} ${this.settings.croppingClass}`);\n        this.intervalRef = window.setInterval(() => {\n            if (self.intervalRef) {\n                clearInterval(self.intervalRef);\n            }\n            if (image.naturalHeight > 0 && image.naturalWidth > 0) {\n\n\n                image.height = image.naturalHeight;\n                image.width = image.naturalWidth;\n\n                clearInterval(self.intervalRef);\n                self.getOrientedImage(image, (img:HTMLImageElement) => {\n                    if (this.settings.dynamicSizing) {\n                        let canvas:HTMLCanvasElement = this.cropcanvas.nativeElement;\n                        this.settings.canvasWidth = canvas.offsetWidth;\n                        this.settings.canvasHeight = canvas.offsetHeight;\n                        this.cropper.resizeCanvas(canvas.offsetWidth, canvas.offsetHeight, false);\n                    }\n\n\n                    self.cropper.setImage(img);\n                    if (self.cropPosition && self.cropPosition.isInitialized()) {\n                        self.cropper.updateCropPosition(self.cropPosition.toBounds());\n                    }\n                    self.image.original = img;\n                    let bounds = self.cropper.getCropBounds();\n                    self.image.image = self.cropper.getCroppedImage().src;\n                    if (newBounds != null) {\n                        bounds = newBounds;\n                        self.cropper.setBounds(bounds);\n                    }\n                    self.onCrop.emit(bounds);\n                });\n            }\n        }, 10);\n    }\n\n    private isCropPositionChanged(changes:SimpleChanges):boolean {\n        if (this.cropper && changes['cropPosition'] && this.isCropPositionUpdateNeeded) {\n            return true;\n        } else {\n            this.isCropPositionUpdateNeeded = true;\n            return false;\n        }\n    }\n\n    private updateCropBounds():void {\n        let cropBound:Bounds = this.cropper.getCropBounds();\n        this.cropPositionChange.emit(new CropPosition(cropBound.left, cropBound.top, cropBound.width, cropBound.height));\n        this.isCropPositionUpdateNeeded = false;\n    }\n\n    private getOrientedImage(image:HTMLImageElement, callback:Function) {\n        let img:any;\n\n        Exif.getData(image, function () {\n            let orientation = Exif.getTag(image, 'Orientation');\n\n            if ([3, 6, 8].indexOf(orientation) > -1) {\n                let canvas:HTMLCanvasElement = document.createElement('canvas'),\n                    ctx:CanvasRenderingContext2D = <CanvasRenderingContext2D> canvas.getContext('2d'),\n                    cw:number = image.width,\n                    ch:number = image.height,\n                    cx:number = 0,\n                    cy:number = 0,\n                    deg:number = 0;\n\n                switch (orientation) {\n                    case 3:\n                        cx = -image.width;\n                        cy = -image.height;\n                        deg = 180;\n                        break;\n                    case 6:\n                        cw = image.height;\n                        ch = image.width;\n                        cy = -image.height;\n                        deg = 90;\n                        break;\n                    case 8:\n                        cw = image.height;\n                        ch = image.width;\n                        cx = -image.width;\n                        deg = 270;\n                        break;\n                    default:\n                        break;\n                }\n\n                canvas.width = cw;\n                canvas.height = ch;\n                ctx.rotate(deg * Math.PI / 180);\n                ctx.drawImage(image, cx, cy);\n                img = document.createElement('img');\n                img.width = cw;\n                img.height = ch;\n                img.addEventListener('load', function () {\n                    callback(img);\n                });\n                img.src = canvas.toDataURL('image/png');\n            } else {\n                img = image;\n                callback(img);\n            }\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'img-cropper',\n    template: `\n        <span class=\"ng2-imgcrop\">\n          <input *ngIf=\"!settings.noFileInput\" type=\"file\" accept=\"image/*\" (change)=\"fileChangeListener($event)\">\n          <canvas #cropcanvas\n                  (mousedown)=\"onMouseDown($event)\"\n                  (mouseup)=\"onMouseUp($event)\"\n                  (mousemove)=\"onMouseMove($event)\"\n                  (mouseleave)=\"onMouseUp($event)\"\n                  (touchmove)=\"onTouchMove($event)\"\n                  (touchend)=\"onTouchEnd($event)\"\n                  (touchstart)=\"onTouchStart($event)\">\n          </canvas>\n        </span>\n      `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'cropcanvas': [{ type: ViewChild, args: ['cropcanvas', undefined, ] },],\n'settings': [{ type: Input, args: ['settings', ] },],\n'image': [{ type: Input, args: ['image', ] },],\n'cropper': [{ type: Input },],\n'cropPosition': [{ type: Input },],\n'cropPositionChange': [{ type: Output },],\n'onCrop': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}